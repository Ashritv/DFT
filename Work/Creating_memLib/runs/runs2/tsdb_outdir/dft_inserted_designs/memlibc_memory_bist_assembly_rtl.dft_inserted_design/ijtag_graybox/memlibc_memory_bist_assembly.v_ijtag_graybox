/* Generated by Tessent Shell 2022.4 at Mon Apr 28 12:25:27 IST 2025 */
module memlibc_memory_bist_assembly(BIST_CLK, m1_A, m1_WEB, m1_CSB, m1_I, m1_O, ijtag_tck, ijtag_reset, ijtag_ce, ijtag_se, 
                                    ijtag_ue, ijtag_sel, ijtag_si, ijtag_so);
input [11:0] m1_A;
input [5:0] m1_I;
input BIST_CLK;
input m1_WEB;
input m1_CSB;
output [5:0] m1_O;
input ijtag_tck;
input ijtag_reset;
input ijtag_ce;
input ijtag_se;
input ijtag_ue;
input ijtag_sel;
input ijtag_si;
wire ijtag_tck;
wire ijtag_reset;
wire ijtag_ce;
wire ijtag_se;
wire ijtag_ue;
wire ijtag_sel;
wire ijtag_si;
output ijtag_so;
wire ijtag_so;
wire [2:0] BIST_SETUP;
wire memlibc_memory_bist_assembly_rtl_tessent_sib_mbist_inst_so;
wire memlibc_memory_bist_assembly_rtl_tessent_sib_sti_inst_so;
wire memlibc_memory_bist_assembly_rtl_tessent_sib_sti_inst_to_select;
wire ijtag_to_tck;
wire ijtag_to_ue;
wire ijtag_to_reset;
wire ijtag_to_se;
wire ijtag_to_ce;
wire ijtag_to_sel;
wire ltest_to_en;
wire ltest_to_mem_bypass_en;
wire ltest_to_scan_en;
wire ltest_to_mcp_bounding_en;
wire BIST_HOLD;
wire BIST_SELECT_TEST_DATA;
wire to_controllers_tck;
wire mcp_bounding_to_en;
wire memory_bypass_to_en;
wire ltest_to_en_ts1;
wire BIST_ALGO_MODE0;
wire BIST_ALGO_MODE1;
wire ENABLE_MEM_RESET;
wire REDUCED_ADDRESS_COUNT;
wire BIST_ASYNC_RESET;
wire MBISTPG_SO;
wire MBISTPG_DONE;
wire MBISTPG_GO;
wire BIST_DIAG_EN;
wire FL_CNT_MODE0;
wire FL_CNT_MODE1;
wire memlibc_memory_bist_assembly_rtl_tessent_mbist_bap_inst_so;
wire [0:0] toBist;
wire [0:0] bistEn;
memlibc_memory_bist_assembly_ts_graybox_memlibc_memory_bist_assembly_mem_container_1 mem_container_inst(
    .m1_A(m1_A), .BIST_CLK(BIST_CLK), .m1_WEB(m1_WEB), .m1_CSB(m1_CSB), .m1_I(m1_I), .m1_mem_inst_O(m1_O), .BIST_HOLD(BIST_HOLD), .BIST_SETUP(BIST_SETUP[0]), .BIST_SETUP_ts1(BIST_SETUP[1]), .BIST_SETUP_ts2(BIST_SETUP[2]), .BIST_SELECT_TEST_DATA(BIST_SELECT_TEST_DATA), .to_controllers_tck(to_controllers_tck), .mcp_bounding_to_en(mcp_bounding_to_en), .scan_to_en(), .memory_bypass_to_en(memory_bypass_to_en), .ltest_to_en(ltest_to_en_ts1), .BIST_ALGO_MODE0({BIST_ALGO_MODE1, BIST_ALGO_MODE0}), .ENABLE_MEM_RESET(ENABLE_MEM_RESET), .REDUCED_ADDRESS_COUNT(REDUCED_ADDRESS_COUNT), .BIST_ASYNC_RESET(BIST_ASYNC_RESET), .toBist(toBist), .MBISTPG_SO(MBISTPG_SO), .bistEn(bistEn), .MBISTPG_DONE(MBISTPG_DONE), .MBISTPG_GO(MBISTPG_GO), .BIST_DIAG_EN(BIST_DIAG_EN), .FL_CNT_MODE0({FL_CNT_MODE1, FL_CNT_MODE0}), .INCLUDE_MEM_RESULTS_REG(), .to_interfaces_tck()
);
memlibc_memory_bist_assembly_rtl_tessent_sib_1 memlibc_memory_bist_assembly_rtl_tessent_sib_sti_inst(
    .ijtag_reset(ijtag_reset), .ijtag_sel(ijtag_sel), .ijtag_si(ijtag_si), .ijtag_ce(ijtag_ce), .ijtag_se(ijtag_se), .ijtag_ue(ijtag_ue), .ijtag_tck(ijtag_tck), .ijtag_so(ijtag_so), .ijtag_from_so(memlibc_memory_bist_assembly_rtl_tessent_sib_mbist_inst_so), .ltest_si(1'b0), .ltest_scan_en(1'b0), .ltest_en(1'b0), .ltest_clk(1'b0), .ltest_mem_bypass_en(1'b1), .ltest_mcp_bounding_en(1'b0), .ltest_occ_en(1'b0), .ltest_async_set_reset_static_disable(1'b0), .ltest_static_clock_control_mode(1'b0), .ltest_clock_sequence({1'b0, 1'b0}), .ijtag_to_tck(ijtag_to_tck), .ijtag_to_reset(ijtag_to_reset), .ijtag_to_si(memlibc_memory_bist_assembly_rtl_tessent_sib_sti_inst_so), .ijtag_to_ce(ijtag_to_ce), .ijtag_to_se(ijtag_to_se), .ijtag_to_ue(ijtag_to_ue), .ltest_so(), .ltest_to_en(ltest_to_en), .ltest_to_mem_bypass_en(ltest_to_mem_bypass_en), .ltest_to_mcp_bounding_en(ltest_to_mcp_bounding_en), .ltest_to_scan_en(ltest_to_scan_en), .ijtag_to_sel(memlibc_memory_bist_assembly_rtl_tessent_sib_sti_inst_to_select)
);
memlibc_memory_bist_assembly_rtl_tessent_sib_2 memlibc_memory_bist_assembly_rtl_tessent_sib_mbist_inst(
    .ijtag_reset(ijtag_to_reset), .ijtag_sel(memlibc_memory_bist_assembly_rtl_tessent_sib_sti_inst_to_select), .ijtag_si(memlibc_memory_bist_assembly_rtl_tessent_sib_sti_inst_so), .ijtag_ce(ijtag_to_ce), .ijtag_se(ijtag_to_se), .ijtag_ue(ijtag_to_ue), .ijtag_tck(ijtag_to_tck), .ijtag_so(memlibc_memory_bist_assembly_rtl_tessent_sib_mbist_inst_so), .ijtag_from_so(memlibc_memory_bist_assembly_rtl_tessent_mbist_bap_inst_so), .ijtag_to_sel(ijtag_to_sel)
);
memlibc_memory_bist_assembly_rtl_tessent_mbist_bap memlibc_memory_bist_assembly_rtl_tessent_mbist_bap_inst(
    .reset(ijtag_to_reset), .ijtag_select(ijtag_to_sel), .si(memlibc_memory_bist_assembly_rtl_tessent_sib_sti_inst_so), .capture_en(ijtag_to_ce), .shift_en(ijtag_to_se), .shift_en_R(), .update_en(ijtag_to_ue), .tck(ijtag_to_tck), .to_interfaces_tck(), .to_controllers_tck(to_controllers_tck), .mcp_bounding_en(ltest_to_mcp_bounding_en), .mcp_bounding_to_en(mcp_bounding_to_en), .scan_en(ltest_to_scan_en), .scan_to_en(), .memory_bypass_en(ltest_to_mem_bypass_en), .memory_bypass_to_en(memory_bypass_to_en), .ltest_en(ltest_to_en), .ltest_to_en(ltest_to_en_ts1), .BIST_HOLD(BIST_HOLD), .ENABLE_MEM_RESET(ENABLE_MEM_RESET), .REDUCED_ADDRESS_COUNT(REDUCED_ADDRESS_COUNT), .BIST_SELECT_TEST_DATA(BIST_SELECT_TEST_DATA), .BIST_ALGO_MODE0(BIST_ALGO_MODE0), .BIST_ALGO_MODE1(BIST_ALGO_MODE1), .BIST_DIAG_EN(BIST_DIAG_EN), .BIST_ASYNC_RESET(BIST_ASYNC_RESET), .FL_CNT_MODE0(FL_CNT_MODE0), .FL_CNT_MODE1(FL_CNT_MODE1), .INCLUDE_MEM_RESULTS_REG(), .CHAIN_BYPASS_EN(), .TCK_MODE(), .BIST_SETUP(BIST_SETUP[2:0]), .MBISTPG_GO(MBISTPG_GO), .MBISTPG_DONE(MBISTPG_DONE), .bistEn(bistEn), .toBist(toBist), .fromBist(MBISTPG_SO), .so(memlibc_memory_bist_assembly_rtl_tessent_mbist_bap_inst_so)
);
endmodule

module memlibc_memory_bist_assembly_ts_graybox_memlibc_memory_bist_assembly_mem_container_1(m1_A, BIST_CLK, m1_WEB, m1_CSB, m1_I, m1_mem_inst_O, BIST_HOLD, BIST_SETUP, BIST_SETUP_ts1, BIST_SETUP_ts2, BIST_SELECT_TEST_DATA, to_controllers_tck, mcp_bounding_to_en, scan_to_en, memory_bypass_to_en, ltest_to_en, BIST_ALGO_MODE0, ENABLE_MEM_RESET, REDUCED_ADDRESS_COUNT, BIST_ASYNC_RESET, toBist, MBISTPG_SO, bistEn, MBISTPG_DONE, MBISTPG_GO, BIST_DIAG_EN, FL_CNT_MODE0, INCLUDE_MEM_RESULTS_REG, to_interfaces_tck);
input wire [11:0] m1_A;
input BIST_CLK;
wire BIST_CLK;
input m1_WEB;
wire m1_WEB;
input m1_CSB;
wire m1_CSB;
input wire [5:0] m1_I;
output wire [5:0] m1_mem_inst_O;
input BIST_HOLD;
wire BIST_HOLD;
input BIST_SETUP;
wire BIST_SETUP;
input wire [1:1] BIST_SETUP_ts1;
input BIST_SETUP_ts2;
wire BIST_SETUP_ts2;
input BIST_SELECT_TEST_DATA;
wire BIST_SELECT_TEST_DATA;
input to_controllers_tck;
wire to_controllers_tck;
input mcp_bounding_to_en;
wire mcp_bounding_to_en;
input scan_to_en;
wire scan_to_en;
input memory_bypass_to_en;
wire memory_bypass_to_en;
input ltest_to_en;
wire ltest_to_en;
input wire [1:0] BIST_ALGO_MODE0;
input ENABLE_MEM_RESET;
wire ENABLE_MEM_RESET;
input REDUCED_ADDRESS_COUNT;
wire REDUCED_ADDRESS_COUNT;
input BIST_ASYNC_RESET;
wire BIST_ASYNC_RESET;
input toBist;
wire toBist;
output MBISTPG_SO;
wire MBISTPG_SO;
input bistEn;
wire bistEn;
output MBISTPG_DONE;
wire MBISTPG_DONE;
output MBISTPG_GO;
wire MBISTPG_GO;
input BIST_DIAG_EN;
wire BIST_DIAG_EN;
input wire [1:0] FL_CNT_MODE0;
input INCLUDE_MEM_RESULTS_REG;
wire INCLUDE_MEM_RESULTS_REG;
input to_interfaces_tck;
wire to_interfaces_tck;
wire BIST_SO;
wire BIST_GO;
memlibc_memory_bist_assembly_ts_graybox_memlibc_memory_bist_assembly_rtl_tessent_mbist_c1_controller_1 memlibc_memory_bist_assembly_rtl_tessent_mbist_c1_controller_inst(
    .MBISTPG_ALGO_MODE(BIST_ALGO_MODE0[1:0]), .MBISTPG_MEM_RST(ENABLE_MEM_RESET), .MBISTPG_REDUCED_ADDR_CNT_EN(REDUCED_ADDRESS_COUNT), .MEM_BYPASS_EN(memory_bypass_to_en), .MCP_BOUNDING_EN(mcp_bounding_to_en), .MEM0_BIST_COLLAR_SO(BIST_SO), .FL_CNT_MODE(FL_CNT_MODE0[1:0]), .BIST_COLLAR_GO(BIST_GO), .MBISTPG_DIAG_EN(BIST_DIAG_EN), .BIST_CLK(BIST_CLK), .BIST_SI(toBist), .BIST_HOLD(BIST_HOLD), .BIST_SETUP2(BIST_SETUP_ts2), .BIST_SETUP({BIST_SETUP_ts1, BIST_SETUP}), .MBISTPG_TESTDATA_SELECT(BIST_SELECT_TEST_DATA), .TCK(to_controllers_tck), .MBISTPG_EN(bistEn), .MBISTPG_ASYNC_RESETN(BIST_ASYNC_RESET), .LV_TM(ltest_to_en), .MBISTPG_RESET_REG_SETUP2(), .BIST_COL_ADD(), .BIST_ROW_ADD(), .BIST_WRITE_DATA(), .BIST_EXPECT_DATA(), .BIST_SHIFT_COLLAR(), .BIST_TESTDATA_SELECT_TO_COLLAR(), .MEM0_BIST_COLLAR_SI(), .BIST_COLLAR_SETUP(), .BIST_COLLAR_HOLD(), .FREEZE_STOP_ERROR(), .ERROR_CNT_ZERO(), .BIST_COLLAR_DIAG_EN(), .BIST_CLEAR_DEFAULT(), .BIST_CLEAR(), .MBISTPG_SO(MBISTPG_SO), .BIST_WRITEENABLE(), .BIST_OUTPUTENABLE(), .BIST_SELECT(), .BIST_CMP(), .BIST_COLLAR_EN0(), .BIST_RUN_TO_COLLAR0(), .MBISTPG_GO(MBISTPG_GO), .MBISTPG_DONE(MBISTPG_DONE), .BIST_ON_TO_COLLAR()
);
memlibc_memory_bist_assembly_ts_graybox_memlibc_memory_bist_assembly_rtl_tessent_mbist_c1_interface_m1_1 m1_mem_inst_interface_inst(
    .WEB_IN(m1_WEB), .CSB_IN(m1_CSB), .A_IN(m1_A[11:0]), .I_IN(m1_I[5:0]), .O(m1_mem_inst_O), .TCK(to_interfaces_tck), .BIST_CMP(), .INCLUDE_MEM_RESULTS_REG(INCLUDE_MEM_RESULTS_REG), .BIST_WRITEENABLE(), .BIST_OUTPUTENABLE(), .BIST_SELECT(), .BIST_COL_ADD(), .BIST_ROW_ADD(), .BIST_WRITE_DATA(), .BIST_TESTDATA_SELECT_TO_COLLAR(), .MEM_BYPASS_EN(memory_bypass_to_en), .SCAN_SHIFT_EN(scan_to_en), .MCP_BOUNDING_EN(mcp_bounding_to_en), .BIST_ON(), .BIST_RUN(), .BIST_ASYNC_RESETN(BIST_ASYNC_RESET), .BIST_CLK(BIST_CLK), .BIST_SHIFT_COLLAR(), .BIST_EXPECT_DATA(), .BIST_SI(), .BIST_COLLAR_SETUP(), .BIST_COLLAR_HOLD(), .BIST_DIAG_EN(), .BIST_CLEAR_DEFAULT(), .BIST_CLEAR(), .BIST_SETUP0(BIST_SETUP), .LV_TM(ltest_to_en), .FREEZE_STOP_ERROR(), .BIST_COLLAR_EN(), .RESET_REG_SETUP2(), .ERROR_CNT_ZERO(), .WEB(), .CSB(), .A(), .I(), .SCAN_OBS_FLOPS(), .BIST_SO(BIST_SO), .BIST_GO(BIST_GO)
);
endmodule

module memlibc_memory_bist_assembly_ts_graybox_memlibc_memory_bist_assembly_rtl_tessent_mbist_c1_interface_m1_1 (input wire WEB_IN, input wire CSB_IN, input wire [11:0] A_IN, input wire [5:0] I_IN, input wire [5:0] O, input wire TCK, input wire BIST_CMP, input wire INCLUDE_MEM_RESULTS_REG, input wire BIST_WRITEENABLE, input wire BIST_OUTPUTENABLE, input wire BIST_SELECT, input wire [5:0] BIST_COL_ADD, input wire [5:0] BIST_ROW_ADD, input wire [1:0] BIST_WRITE_DATA, input wire BIST_TESTDATA_SELECT_TO_COLLAR, input wire MEM_BYPASS_EN, input wire SCAN_SHIFT_EN, input wire MCP_BOUNDING_EN, input wire BIST_ON, input wire BIST_RUN, input wire BIST_ASYNC_RESETN, input wire BIST_CLK, input wire BIST_SHIFT_COLLAR, input wire [1:0] BIST_EXPECT_DATA, input wire BIST_SI, input wire BIST_COLLAR_SETUP, input wire BIST_COLLAR_HOLD, input wire BIST_DIAG_EN, input wire BIST_CLEAR_DEFAULT, input wire BIST_CLEAR, input wire BIST_SETUP0, input wire LV_TM, input wire FREEZE_STOP_ERROR, input wire BIST_COLLAR_EN, input wire RESET_REG_SETUP2, input wire ERROR_CNT_ZERO, output wire WEB, output wire CSB, output reg [11:0] A, output reg [5:0] I, output reg [4:0] SCAN_OBS_FLOPS, output wire BIST_SO, output wire BIST_GO);
wire STATUS_SO;
reg FREEZE_STOP_ERROR_EARLY_R;
assign STATUS_SO = FREEZE_STOP_ERROR_EARLY_R;
assign BIST_SO = STATUS_SO;
memlibc_memory_bist_assembly_ts_graybox_memlibc_memory_bist_assembly_rtl_tessent_mbist_c1_interface_m1_STATUS_1 MBISTPG_STATUS(
    .BIST_CLEAR(BIST_CLEAR), .FREEZE_STOP_ERROR_EARLY_R(FREEZE_STOP_ERROR_EARLY_R), .FREEZE_GO_ID(), .CMP_EN(), .BIST_ASYNC_RESETN(BIST_ASYNC_RESETN), .BIST_CLK(), .BIST_COLLAR_SETUP(BIST_COLLAR_SETUP), .BIST_COLLAR_HOLD(), .BIST_SHIFT_COLLAR(BIST_SHIFT_COLLAR), .BIST_ON(BIST_ON), .USE_DEFAULTS(), .SI(), .BIST_DIAG_EN(BIST_DIAG_EN), .RAW_CMP_STAT(), .MCP_BOUNDING_EN(MCP_BOUNDING_EN), .INCLUDE_MEM_RESULTS_REG(INCLUDE_MEM_RESULTS_REG), .GO_EN(), .ERROR(), .ERROR_R(), .SO(), .BIST_GO(BIST_GO)
);
endmodule

module memlibc_memory_bist_assembly_ts_graybox_memlibc_memory_bist_assembly_rtl_tessent_mbist_c1_controller_1 (input wire [1:0] MBISTPG_ALGO_MODE, input wire MBISTPG_MEM_RST, input wire MBISTPG_REDUCED_ADDR_CNT_EN, input wire MEM_BYPASS_EN, input wire MCP_BOUNDING_EN, input wire MEM0_BIST_COLLAR_SO, input wire [1:0] FL_CNT_MODE, input wire BIST_COLLAR_GO, input wire MBISTPG_DIAG_EN, input wire BIST_CLK, input wire BIST_SI, input wire BIST_HOLD, input wire BIST_SETUP2, input wire [1:0] BIST_SETUP, input wire MBISTPG_TESTDATA_SELECT, input wire TCK, input wire MBISTPG_EN, input wire MBISTPG_ASYNC_RESETN, input wire LV_TM, output wire MBISTPG_RESET_REG_SETUP2, output wire [5:0] BIST_COL_ADD, output wire [5:0] BIST_ROW_ADD, output wire [1:0] BIST_WRITE_DATA, output wire [1:0] BIST_EXPECT_DATA, output wire BIST_SHIFT_COLLAR, output wire BIST_TESTDATA_SELECT_TO_COLLAR, output wire MEM0_BIST_COLLAR_SI, output wire BIST_COLLAR_SETUP, output wire BIST_COLLAR_HOLD, output wire FREEZE_STOP_ERROR, output wire ERROR_CNT_ZERO, output wire BIST_COLLAR_DIAG_EN, output wire BIST_CLEAR_DEFAULT, output wire BIST_CLEAR, output wire MBISTPG_SO, output wire BIST_WRITEENABLE, output wire BIST_OUTPUTENABLE, output wire BIST_SELECT, output wire BIST_CMP, output wire BIST_COLLAR_EN0, output wire BIST_RUN_TO_COLLAR0, output wire MBISTPG_GO, output wire MBISTPG_DONE, output wire BIST_ON_TO_COLLAR);
reg BIST_SO_PIPELINE;
assign MBISTPG_SO = BIST_SO_PIPELINE;
memlibc_memory_bist_assembly_rtl_tessent_buf tessent_persistent_cell_MBISTPG_DONE(
    .a(), .y(MBISTPG_DONE)
);
memlibc_memory_bist_assembly_rtl_tessent_buf tessent_persistent_cell_MBISTPG_GO(
    .a(), .y(MBISTPG_GO)
);
endmodule

module memlibc_memory_bist_assembly_ts_graybox_memlibc_memory_bist_assembly_rtl_tessent_mbist_c1_interface_m1_STATUS_1 (input wire BIST_CLEAR, input wire FREEZE_STOP_ERROR_EARLY_R, input wire FREEZE_GO_ID, input wire CMP_EN, input wire BIST_ASYNC_RESETN, input wire BIST_CLK, input wire BIST_COLLAR_SETUP, input wire BIST_COLLAR_HOLD, input wire BIST_SHIFT_COLLAR, input wire BIST_ON, input wire USE_DEFAULTS, input wire SI, input wire BIST_DIAG_EN, input wire [5:0] RAW_CMP_STAT, input wire MCP_BOUNDING_EN, input wire INCLUDE_MEM_RESULTS_REG, output reg GO_EN, output wire [0:0] ERROR, output wire [0:0] ERROR_R, output wire SO, output wire BIST_GO);
wire BIST_GO_INT;
assign BIST_GO = BIST_GO_INT;
endmodule

