/home/Mentor/tessent/bin/tessent -shell -dofile patterns_spec.do -log tshell.log_patterns_spec -replace
//  Warning: Tessent user documentation not found
//  Tessent Shell  2022.4    Tue Nov 29 21:19:37 GMT 2022
//                Unpublished work. Copyright 2022 Siemens
//
//      This material contains trade secrets or otherwise confidential 
//  information owned by Siemens Industry Software Inc. or its affiliates 
//   (collectively, "SISW"), or its licensors. Access to and use of this 
//     information is strictly limited as set forth in the Customer's 
//                   applicable agreements with SISW. 
//
//  Siemens software executing under x86-64 Linux on Mon Apr 28 10:59:05 IST 2025.
//  64 bit version
//  Host: APL2.kletech.ac.in (31644 MB RAM, 61034 MB Swap)
//
//  command: #-----------------------------------------------------------
//  command: # This file created by : memlibCertify
//  command: #     Software version : 2022.4
//  command: #           Created on : 04/28/25 10:58:46
//  command: #-----------------------------------------------------------
//  command: # --
//  command: # -- Patterns 
//  command: # --
//  command: set_context patterns -ijtag
//  command: set design_name memlibc_memory_bist_assembly
//  command: set patterns_spec_file_path  [get_tsdb_output_directory]/patterns/${design_name}_rtl.patterns_spec_signoff
//  command: if { ! [get_resource icl_is_elaborated] } {
//             read_design ${design_name} -design_id rtl -no_hdl
//             set_current_design ${design_name}
//           }
//  sub-command: read_design memlibc_memory_bist_assembly -design_id rtl -no_hdl 
//  sub-command: set_current_design memlibc_memory_bist_assembly 
//  Note: Reading the interface of the current design './tsdb_outdir/dft_inserted_designs/memlibc_memory_bist_assembly_rtl.dft_inserted_design/memlibc_memory_bist_assembly.v_interface'
//  ---------------------------------------------------------------------------
//  Begin ICL elaboration and checking.
//  -----------------------------------
//  ICL elaboration completed, CPU time=0.03 sec.
//  ---------------------------------------------------------------------------
//  command: if { [file exists ${patterns_spec_file_path}] } {
//             puts "## Reading PatternsSpecification from '${patterns_spec_file_path}'"
//             read_config_data ${patterns_spec_file_path}
//             set patterns_spec [get_config_elements PatternsSpecification]
//           } else {
//             set patterns_spec [create_patterns_specification -replace]
//             set_config_value [get_config_elements -in $patterns_spec Patterns/TestStep/MemoryBist/reduced_address_count] off
//             # Add TestStep for custom algorithms {{{
//             set target_ts [get_config_elements {Patterns(MemoryBist_P[0-9]+)} -in $patterns_spec -regexp]
//             foreach_in_collection tcd_controller [get_config_elements Core/MemoryBistController -partition tcd] {
//               set algo_list [list]
//               set opset_list [list]
//               set controller_name [get_config_value -id core_name [get_config_value $tcd_controller -parent_object]]
//               foreach_in_collection algo_obj [get_config_elements Algorithm -in $tcd_controller] {
//                 lappend algo_list [get_config_value -id algorithm_name $algo_obj]
//               }
//               foreach_in_collection opset_obj [get_config_elements OperationSet -in $tcd_controller] {
//                 lappend opset_list [get_config_value -id name $opset_obj]
//               }
//               set default_opset [get_config_value StepCounter(0)/DefaultOperationSet -in $tcd_controller]
//               foreach_in_collection ctl_inst [get_icl_instances -of_module [get_icl_module $controller_name]] {
//                 set ts [add_config_element TestStep(algo[incr algo_cnt]) -in $target_ts]
//                 set mbist_w [add_config_element MemoryBist -in $ts]
//                 set ctl_w [add_config_element Controller([get_single_name $ctl_inst]) -in $mbist_w]
//                 set_config_value run_mode -in $mbist_w run_time_prog;
//                 set_config_comment [get_config_value AdvancedOptions/apply_algorithm -in $ctl_w -object] "Available algorithms : [join $algo_list ,]"
//                 set_config_value AdvancedOptions/apply_algorithm -in $ctl_w [lindex $algo_list 0]
//                 set_config_comment [get_config_value AdvancedOptions/apply_operation_set -in $ctl_w -object] "Available operation sets: [join $opset_list ,]"
//                 set_config_value AdvancedOptions/apply_operation_set -in $ctl_w $default_opset
//                 set_config_value AdvancedOptions/freeze_step -in $ctl_w off
//               }
//             }
//             # }}}
//           }
## Reading PatternsSpecification from './tsdb_outdir/patterns/memlibc_memory_bist_assembly_rtl.patterns_spec_signoff'
//  sub-command: read_config_data ./tsdb_outdir/patterns/memlibc_memory_bist_assembly_rtl.patterns_spec_signoff 
//  command: report_config_data $patterns_spec

PatternsSpecification(memlibc_memory_bist_assembly,rtl,signoff) {
  Patterns(ICLNetwork) {
    ICLNetworkVerify(memlibc_memory_bist_assembly) {
    }
  }
  Patterns(MemoryBist_P1) {
    ClockPeriods {
      BIST_CLK : 10.0ns;
    }
    TestStep(go_nogo) {
      MemoryBist {
        run_mode : run_time_prog;
        reduced_address_count : off;
        Controller(mem_container_inst_memlibc_memory_bist_assembly_rtl_tessent_mbist_c1_controller_inst) {
          DiagnosisOptions {
            compare_go : on;
            compare_go_id : on;
          }
        }
      }
    }
    TestStep(algo1) {
      MemoryBist {
        run_mode : run_time_prog;
        Controller(mem_container_inst_memlibc_memory_bist_assembly_rtl_tessent_mbist_c1_controller_inst) {
          AdvancedOptions {
            // Available algorithms : SMARCH
            apply_algorithm : SMARCH;
            // Available operation sets: SYNC
            apply_operation_set : SYNC;
            freeze_step : off;
          }
        }
      }
    }
  }
  Patterns(MemoryBist_ParallelRetentionTest_P1) {
    ClockPeriods {
      BIST_CLK : 10.0ns;
    }
    TestStep(ParallelRetentionTest) {
      MemoryBist {
        run_mode : hw_default;
        parallel_retention_time : 0;
        reduced_address_count : off;
        Controller(mem_container_inst_memlibc_memory_bist_assembly_rtl_tessent_mbist_c1_controller_inst) {
          parallel_retention_group : 1;
          DiagnosisOptions {
            compare_go_id : on;
          }
        }
      }
    }
  }
}
//  command: process_patterns_specification 
//  
//  Begin processing of /PatternsSpecification(memlibc_memory_bist_assembly,rtl,signoff)
//  
//    Processing of /PatternsSpecification(memlibc_memory_bist_assembly,rtl,signoff)/Patterns(ICLNetwork)
//  
//      Creation of pattern 'ICLNetwork'
//        Solving ICLNetworkVerify(memlibc_memory_bist_assembly)
//  
//      Writing pattern file './tsdb_outdir/patterns/memlibc_memory_bist_assembly_rtl.patterns_signoff/ICLNetwork.v'
//  
//    Processing of /PatternsSpecification(memlibc_memory_bist_assembly,rtl,signoff)/Patterns(MemoryBist_P1)
//      Processing of TestStep(go_nogo) instrument 'memory_bist'
//      Processing of TestStep(algo1) instrument 'memory_bist'
//  Note: Validating algorithm SMARCH....
//  Note: Validating algorithm SMARCH....done
//  
//      Creation of pattern 'MemoryBist_P1'
//        Solving TestStep(go_nogo)
//        Solving TestStep(algo1)
//  
//      Writing pattern file './tsdb_outdir/patterns/memlibc_memory_bist_assembly_rtl.patterns_signoff/MemoryBist_P1.v'
//  
//    Processing of /PatternsSpecification(memlibc_memory_bist_assembly,rtl,signoff)/Patterns(MemoryBist_ParallelRetentionTest_P1)
//      Processing of TestStep(ParallelRetentionTest) instrument 'memory_bist'
//  
//      Creation of pattern 'MemoryBist_ParallelRetentionTest_P1'
//        Solving TestStep(ParallelRetentionTest)
//  
//      Writing pattern file './tsdb_outdir/patterns/memlibc_memory_bist_assembly_rtl.patterns_signoff/MemoryBist_ParallelRetentionTest_P1.v'
//      Writing simulation data dictionary file './tsdb_outdir/patterns/memlibc_memory_bist_assembly_rtl.patterns_signoff/simulation.data_dictionary'
//  
//  Done  processing of /PatternsSpecification(memlibc_memory_bist_assembly,rtl,signoff)
//  
//  Writing configuration data file './tsdb_outdir/patterns/memlibc_memory_bist_assembly_rtl.patterns_spec_signoff'.
//  command: exit 
